<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:hf="http://java.sun.com/jsf/composite/tags"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:s="http://jboss.org/seam/faces"
	xmlns:cc="http://java.sun.com/jsf/composite">

<cc:interface componentType="minmaxSearchField">
	<cc:attribute name="label" required="false" />
	<cc:attribute name="minField" required="true" />
	<cc:attribute name="backingBean" required="false" />
	<cc:attribute name="disabled" default="false" />
	<cc:attribute name="size" default="20" />
	<cc:attribute name="padding" default="5px" />
	<cc:attribute name="time" default="false" />
	<cc:attribute name="maxField" required="true" />
</cc:interface>

<cc:implementation>
	<!--  If the value binding is a date, display a p:calendar field. -->
	<ui:fragment
		rendered="#{cc.isDate(cc.attrs.minField,true) and cc.isDate(cc.attrs.maxField,true)}">
		<p:panelGrid columns="2">
			<p:outputLabel
				for="minmaxRange_#{cc.attrs.minField}_#{cc.attrs.maxField}_date"
				value="#{cc.attrs.label}" />
			<p:calendar
				id="minmaxRange_#{cc.attrs.minField}_#{cc.attrs.maxField}_date"
				value="#{cc.filters[cc.minmaxRangeSearchFilterName]}"
				pattern="#{cc.datePattern}" disabled="#{cc.attrs.disabled}" />
		</p:panelGrid>
	</ui:fragment>

	<!--  If the value binding is a number display number field. -->
	<ui:fragment
		rendered="#{cc.isInteger(cc.attrs.minField,true) and cc.isInteger(cc.attrs.maxField,true)}">
		<hf:minmaxNumberField converterId="javax.faces.Integer" />
	</ui:fragment>
	<ui:fragment
		rendered="#{cc.isLong(cc.attrs.minField,true) and cc.isLong(cc.attrs.maxField,true)}">
		<hf:minmaxNumberField converterId="javax.faces.Long" />
	</ui:fragment>
	<ui:fragment
		rendered="#{cc.isByte(cc.attrs.minField,true) and cc.isByte(cc.attrs.maxField,true)}}">
		<hf:minmaxNumberField converterId="javax.faces.Byte" />
	</ui:fragment>
	<ui:fragment
		rendered="#{cc.isShort(cc.attrs.minField,true) and cc.isShort(cc.attrs.maxField,true)}">
		<hf:minmaxNumberField converterId="javax.faces.Short" />
	</ui:fragment>
	<ui:fragment
		rendered="#{cc.isDouble(cc.attrs.minField,true) and cc.isDouble(cc.attrs.maxField,true)}">
		<hf:minmaxNumberField converterId="javax.faces.Double" />
	</ui:fragment>
	<ui:fragment
		rendered="#{cc.isFloat(cc.attrs.minField,true) and cc.isFloat(cc.attrs.maxField,true)}">
		<hf:minmaxNumberField converterId="javax.faces.Float" />
	</ui:fragment>
	<ui:fragment
		rendered="#{cc.isBigDecimal(cc.attrs.minField,true) and cc.isBigDecimal(cc.attrs.maxField,true)}">
		<hf:minmaxNumberField converterId="javax.faces.BigDecimal" />
	</ui:fragment>
</cc:implementation>

</html>
