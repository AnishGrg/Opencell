<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core"
    xmlns:p="http://primefaces.org/ui" xmlns:s="http://jboss.org/seam/faces" xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:o="http://omnifaces.org/ui"
    xmlns:of="http://omnifaces.org/functions" xmlns:cc="http://java.sun.com/jsf/composite" xmlns:hf="http://java.sun.com/jsf/composite/tags" xmlns:hftl="http://hftl.org">

<cc:interface componentType="formField">
    <cc:attribute name="label" required="true" />
    <cc:attribute name="field" required="true" />
    <cc:attribute name="backingBean" required="true" type="org.meveo.admin.action.BaseBean" />
    <cc:attribute name="entity" required="false" type="java.lang.Object" />
    <cc:attribute name="required" default="false" />
    <cc:attribute name="size" default="#{cc.attrs.field =='description'?80:20}" />
    <cc:attribute name="maxlength" default="#{cc.attrs.field =='description'?100:40}" />
    <cc:attribute name="deleteButton" default="true" />
    <cc:attribute name="time" default="false" />
    <cc:attribute name="listType" default="simpleList" />
    <cc:attribute name="valueLabelField" />
    <cc:attribute name="valueLabelField2" />
    <cc:attribute name="showButtonAddNew" default="true" />
    <cc:attribute name="disabled" default="false" />
    <cc:attribute name="textArea" default="false" />
    <cc:attribute name="cols" default="80" />
    <cc:attribute name="rows" default="5" />
    <cc:attribute name="childField" required="false" />
    <cc:attribute name="childField2" required="false" />
    <cc:attribute name="isMessage" required="false" />
    <cc:attribute name="messagePrefix" required="false" />
    <cc:attribute name="messagePrefixWithDot" default="#{cc.attrs.messagePrefix==null?'':cc.attrs.messagePrefix.concat('.')}" />
    <cc:attribute name="showOnlyOnNew" default="false" />
    <cc:attribute name="showOnlyOnConsult" default="false" />
    <cc:attribute name="dualListModel" />
    <cc:attribute name="isHtml" default="false" />
    <cc:attribute name="useConverter" default="false" />
    <cc:attribute name="validateUnique" default="false" />
    <cc:attribute name="validateRib" default="false" />
    <cc:attribute name="validateEmail" default="false" />
    <cc:attribute name="validatorId" default="" />
    <cc:attribute name="datePattern"
        default="#{cc.attrs.time?paramBean.getProperty('meveo.dateTimeFormat','dd/MM/yyyy HH:mm'):paramBean.getProperty('meveo.dateFormat','dd/MM/yyyy')}" />
    <cc:attribute name="allowEdit" default="true" />
    <cc:attribute name="edit"
        default="#{cc.backingBeanFromParentOrCurrent.edit and (cc.entityFromBackingBeanOrAttribute.id==null or (cc.entityFromBackingBeanOrAttribute.id!=null and cc.attrs.allowEdit))}" />
    <cc:attribute name="minValue" default="0" />
    <cc:attribute name="maxValue" default="" />
    <cc:attribute name="popup" default="false" />
    <cc:attribute name="popupId" default="popup" />
    <cc:attribute name="fkToEntity" default="false" />
    <cc:attribute name="listBean" required="false" />
    <cc:attribute name="listElements" required="false" />
    <cc:attribute name="listenerUpdate" default=""></cc:attribute>
    <cc:attribute name="converter" required="false" />
    <cc:attribute name="style" default="" />
    <cc:attribute name="panelStyle" default="" />
    <cc:attribute name="mapKeyLabel" default="#{messages['commons.name']}" />
    <cc:attribute name="mapValueLabel" default="#{messages['commons.value']}" />
    <cc:attribute name="show"
        default="#{((not cc.attrs.showOnlyOnNew) or (cc.attrs.showOnlyOnNew and cc.attrs.edit and cc.entityFromBackingBeanOrAttribute.id==null)) and ((not cc.attrs.showOnlyOnConsult) or (cc.attrs.showOnlyOnConsult and cc.attrs.edit== false))}" />
    <cc:attribute name="autocompleteMethod" method-signature="java.lang.String action(java.lang.String)" />
    <cc:attribute name="listValues" />
    <cc:attribute name="negativeValue" default="false" />

    <cc:attribute name="newLine" />
    <cc:attribute name="displayOneLine" />
    <cc:attribute name="styleClass" />
    <cc:attribute name="labelStyleClass" />
    <cc:attribute name="inputStyleClass" />
    <cc:attribute name="style" />
    <cc:attribute name="labelStyle" />
    <cc:attribute name="inputStyle" />

    <cc:attribute name="componentWidth" default="#{cc.attrs.size>40 or cc.attrs.textArea?50:25}" />
    <cc:attribute name="labelWidth" />
    <cc:attribute name="inputWidth" />

    <cc:attribute name="fieldIdPrefix" default="#{cc.attrs.field.concat(cc.attrs.childField!=null?'_'.concat(cc.attrs.childField):'')}" />

</cc:interface>

<cc:implementation>

    <ui:fragment rendered="#{cc.attrs.show}">
        <span id="#{cc.clientId}" style="white-space: nowrap"> <!--  Select and entity or a FK to an entity --> <ui:fragment
                rendered="#{cc.isEntity(cc.attrs.field, cc.attrs.childField, false) or cc.attrs.fkToEntity}">
                <hf:formEntityField id="entityFieldSingle" fieldItem="#{cc.entityFromBackingBeanOrAttribute[cc.attrs.field]}" edit="#{cc.attrs.edit}"
                    newEntity="#{cc.entityFromBackingBeanOrAttribute.id == null}" rendered="#{cc.attrs.childField==null}" />
                <hf:formEntityField id="entityFieldWChild" fieldItem="#{cc.entityFromBackingBeanOrAttribute[cc.attrs.field][cc.attrs.childField]}" edit="#{cc.attrs.edit}"
                    newEntity="#{cc.entityFromBackingBeanOrAttribute.id == null}" rendered="#{cc.attrs.childField!=null}" />
            </ui:fragment> <!--  Enter text --> <ui:fragment rendered="#{cc.isText(cc.attrs.field, cc.attrs.childField, false) and !cc.attrs.fkToEntity}">
                <hf:formTextField id="txtFieldSingle" fieldItem="#{cc.entityFromBackingBeanOrAttribute[cc.attrs.field]}" edit="#{cc.attrs.edit}"
                    rendered="#{cc.attrs.childField==null}" />
                <hf:formTextField id="txtFieldWChild" fieldItem="#{cc.entityFromBackingBeanOrAttribute[cc.attrs.field][cc.attrs.childField]}" edit="#{cc.attrs.edit}"
                    rendered="#{cc.attrs.childField!=null}" />
            </ui:fragment> <!--  Enter map values --> <ui:fragment rendered="#{cc.isMap(cc.attrs.field,false)}">
                <hf:formMapField fieldItem="#{cc.backingBeanFromParentOrCurrent.mapTypeFieldValues[cc.attrs.field]}" edit="#{cc.attrs.edit}" />
            </ui:fragment> <!--  If the value binding is a number, display an input number spinner. --> <ui:fragment
                rendered="#{cc.isInteger(cc.attrs.field,false) or cc.isByte(cc.attrs.field,false) or cc.isLong(cc.attrs.field,false) or cc.isShort(cc.attrs.field,false)}">
                <hf:formNumberField fieldItem="#{cc.entityFromBackingBeanOrAttribute[cc.attrs.field]}" edit="#{cc.attrs.edit}" spinner="true" />
            </ui:fragment> <!--  If the value binding is a rational number, display an input text field. --> <ui:fragment rendered="#{cc.isBigDecimal(cc.attrs.field,false)}">
                <hf:formNumberField fieldItem="#{cc.entityFromBackingBeanOrAttribute[cc.attrs.field]}" edit="#{cc.attrs.edit}" spinner="false" size="20" />
            </ui:fragment> <ui:fragment rendered="#{cc.isDouble(cc.attrs.field,false) or cc.isFloat(cc.attrs.field,false)}">
                <hf:formNumberField fieldItem="#{cc.entityFromBackingBeanOrAttribute[cc.attrs.field]}" edit="#{cc.attrs.edit}" spinner="false" size="5" />
            </ui:fragment> <!--  If the value binding is a boolean, display a selectBooleanCheckbox field. --> <ui:fragment rendered="#{cc.isBoolean(cc.attrs.field,cc.attrs.childField, false)}">
                <hf:formBooleanField fieldItem="#{cc.entityFromBackingBeanOrAttribute[cc.attrs.field]}" edit="#{cc.attrs.edit}" rendered="#{cc.attrs.childField==null}" />
                <hf:formBooleanField fieldItem="#{cc.entityFromBackingBeanOrAttribute[cc.attrs.field][cc.attrs.childField]}" edit="#{cc.attrs.edit}"
                    rendered="#{cc.attrs.childField!=null}" />
            </ui:fragment> <!-- If the value binding is a date, display a p:calendar field. --> <ui:fragment rendered="#{cc.isDate(cc.attrs.field, cc.attrs.childField, false)}">
                <hf:formDateField fieldItem="#{cc.entityFromBackingBeanOrAttribute[cc.attrs.field]}" edit="#{cc.attrs.edit}" />
            </ui:fragment> <!--  If the value binding is an enum, display a drop down. --> <ui:fragment rendered="#{cc.isEnum(cc.attrs.field, cc.attrs.childField, false)}">
                <hf:formEnumField fieldItem="#{cc.entityFromBackingBeanOrAttribute[cc.attrs.field]}" edit="#{cc.attrs.edit}" />
            </ui:fragment> <!--  If the value binding is a List, display a panel with list of entities. --> <ui:fragment rendered="#{cc.isList(cc.attrs.field,false)}">
                <hf:formListField fieldItem="#{cc.entityFromBackingBeanOrAttribute[cc.attrs.field]}" edit="#{cc.attrs.edit}" />
            </ui:fragment>
        </span>
    </ui:fragment>
</cc:implementation>
</html>
