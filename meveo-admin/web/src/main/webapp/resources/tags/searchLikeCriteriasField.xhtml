<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core"
    xmlns:p="http://primefaces.org/ui" xmlns:hf="http://java.sun.com/jsf/composite/tags" xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:s="http://jboss.org/seam/faces"
    xmlns:cc="http://java.sun.com/jsf/composite" xmlns:hftl="http://hftl.org">


<!--
    Makes part of "happy faces" component group.
    A custom component to display a search field with a label and a data entry control for search between criteria fields 
    
    Must be located inside a searchPanel component or have the following attributes provided if used as standalone: backingBean
    
    An applicable input control is determined automatically based on a field, of an entity type associated to a backing bean, type. The following field types are supported:
        Text -  as regular text entry

     Attributes applicable to all types of fields
        backingBean - backing bean associated with search. If not provided a backing bean passed to a parent searchPanel will be used.
        label - a label
        fields - value search between two fields. Can NOT (currently) contain "." for hierarchy of fields e.g. address.email
        disabled - is data entry control disabled        
       
     Attributes applicable to Text type fields
        size - a size attribute of inputText control
        maxlength - a maxlength attribute of inputText control 

-->

<cc:interface componentType="likeCriteriasSearchField">
    <cc:attribute name="label" required="false" />
    <cc:attribute name="fields" required="true" />
    <cc:attribute name="backingBean" required="false" />
    <cc:attribute name="disabled" default="false" />
    <cc:attribute name="size" default="20" />
    <cc:attribute name="maxlength" default="40" />

    <!--  Component display layout and style attributes. See decorateFormField for description and use -->
    <cc:attribute name="newLine" />
    <cc:attribute name="displayOneLine" />
    <cc:attribute name="styleClass" />
    <cc:attribute name="labelStyleClass" />
    <cc:attribute name="inputStyleClass" />
    <cc:attribute name="style" />
    <cc:attribute name="labelStyle" />
    <cc:attribute name="inputStyle" />

    <cc:attribute name="componentWidth" default="#{cc.attrs.size>40?50:25}" />
    <cc:attribute name="labelWidth" />
    <cc:attribute name="inputWidth" />

    <!--  Internal attribute - don't use -->
    <cc:attribute name="fieldIdPrefix" default="#{cc.attrs.fields.replaceAll(',','-')}" />
</cc:interface>

<cc:implementation>
    <span id="#{cc.clientId}" style="white-space: nowrap"> 
    
        <hftl:decorateFormField fieldId="#{cc.attrs.fieldIdPrefix}_likeCriteriasRange" label="#{cc.attrs.label}"
            componentWidth="#{cc.attrs.componentWidth}" newLine="#{cc.attrs.newLine}" displayOneLine="#{cc.attrs.displayOneLine}" styleClass="#{cc.attrs.styleClass}"
            style="#{cc.attrs.style}" labelStyle="#{cc.attrs.labelStyle}" labelStyleClass="#{cc.attrs.labelStyleClass}" inputStyle="#{cc.attrs.inputStyle}"
            inputStyleClass="#{cc.attrs.inputStyleClass}" labelWidth="#{cc.attrs.labelWidth}" inputWidth="#{cc.attrs.inputWidth}">

            <p:inputText id="#{cc.attrs.fieldIdPrefix}_likeCriteriasRange" size="#{cc.attrs.size}" maxlength="#{cc.attrs.maxlength}"
                value="#{cc.filters[cc.likeCriteriasRangeSearchFilterName]}" disabled="#{cc.attrs.disabled}" />
        </hftl:decorateFormField>
    </span>
</cc:implementation>

</html>
