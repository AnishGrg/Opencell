<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:s="http://jboss.com/products/seam/taglib"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html" xmlns:hftl="http://hftl.org"
	xmlns:hf="http://java.sun.com/jsf/composite/tags"
	xmlns:c="http://java.sun.com/jstl/core"
	xmlns:p="http://primefaces.org/ui" template="/layout/template.xhtml">

	<ui:define name="navigation">
		<ui:include src="/layout/navigation.xhtml" />
	</ui:define>

	<ui:define name="body">

		<p:panel>
			<h:form id="crumbmenuForm">
				<p:breadCrumb homeDisplay="text" id="crumbmenu">
					<p:menuitem value="#{messages['menu.admin']}" disabled="true" />
					<p:menuitem outcome="users" value="#{messages['menu.users']}" />
				</p:breadCrumb>
			</h:form>
		</p:panel>

		<p:panel header="#{messages['user.userPanel']}">
			<p:tabView id="tabView" activeIndex="#{userBean.activeTab}">
				<p:tab title="#{messages['commons.tab.information']}">
					<hftl:formPanel label="#{messages['user.userPanel']}"
						backingBean="#{userBean}" columns="1">
						<hftl:formField label="#{messages['user.userName']}"
							field="userName" required="true" validateUnique="true"
							useConverter="false" />
						<hftl:formField label="#{messages['contactInformation.email']}"
							field="email" required="true" useConverter="false"
							validatorId="emailValidator" />
						<p:commandLink value="#{messages['menutop.changePassword']}"
							action="#{userBean.showHidePassword}" update="passwordPanel"
							rendered="#{!(userBean.entity.id==null) and userBean.edit and userBean.canUserUpdateEntity()}"
							partialSubmit="true" process="@this" style="text-align:right;" />


						<p:outputPanel id="passwordPanel" styleClass="clearLeft">
							<h:panelGroup
								rendered="#{(userBean.show or userBean.entity.id==null) and userBean.edit}">
								<hftl:decorateFormField fieldId="password"
									label="#{messages['user.password']}">
									<p:password autocomplete="off" id="password" feedback="true"
										value="#{userBean.password}" required="true"
										match="repeatedPassword" />
								</hftl:decorateFormField>
								<hftl:decorateFormField id="repeatedPassword"
									fieldId="repeatedPassword"
									label="#{messages['user.repeatedPassword']}">
									<p:password id="repeatedPassword"
										value="#{userBean.repeatedPassword}" autocomplete="off" />
								</hftl:decorateFormField>
							</h:panelGroup>
						</p:outputPanel>

						<hftl:formField label="#{messages['commons.provider']}"
							field="provider" listBean="#{providerBean}"
							valueLabelField="code" required="true" allowEdit="false"
							rendered="#{identity.hasPermission('superAdmin', 'superAdminManagement')}"
							newLine="true" listenerUpdate="userRoles"
							actionListenerBean="#{userBean}"
							actionListenerMethod="onProviderChange" />

						<hftl:formField id="userRoles" label="#{messages['user.roles']}"
							field="roles" listType="pickUpList" valueLabelField="name"
							required="true" dualListModel="#{userBean.dualListModel}"
							newLine="true" />

					</hftl:formPanel>
				</p:tab>


				<p:tab title="#{messages['user.securedEntitiesTab']}">
					<h:panelGroup id="selectedEntitiesPanel">

						<p:dataTable id="selectedEntitiesDatatable" var="securedEntity"
							value="#{userBean.entity.securedEntities}" paginator="true"
							rows="10" sortBy="#{securedEntity.code}"
							paginatorAlwaysVisible="false"
							paginatorTemplate="{RowsPerPageDropdown} {FirstPageLink} {PreviousPageLink} {CurrentPageReport} {NextPageLink} {LastPageLink}"
							lazy="false" styleClass="custom-grid"
							rowsPerPageTemplate="10, 20, 50" reflow="true">
							<p:column headerText="#{messages['BusinessEntity.type']}">
								<h:outputText value="#{securedEntity.readableEntityClass}"
									styleClass="field-value" />
							</p:column>
							<p:column headerText="#{messages['BusinessEntity.code']}">
								<h:outputText value="#{securedEntity.code}"
									styleClass="field-value" />
							</p:column>
							<p:column headerText="#{messages['BusinessEntity.description']}">
								<h:outputText value="#{securedEntity.description}"
									styleClass="field-value" />
							</p:column>
							<p:column styleClass="actions-column" rendered="#{userBean.edit}">
								<f:facet name="header">
									<h:outputText value="#{messages['commons.actions']}" />
								</f:facet>
								<p:commandButton
									action="#{userBean.deleteSecuredEntity(entity)}"
									rendered="#{userBean.canUserUpdateEntity()}"
									icon="ui-icon-trash" update=":tabView:selectedEntitiesPanel" />
							</p:column>
							<f:facet name="footer">
								<p:commandButton id="addEntity"
									value="#{messages['user.addSecuredEntity']}"
									rendered="#{userBean.canUserUpdateEntity()}"
									oncomplete="PF('securedEntitiesDialog').show()"></p:commandButton>
							</f:facet>
						</p:dataTable>
						
						<h:panelGroup id="securedEntitiesDialogPanel" layout="block" styleClass="search-panel">
								<p:messages />
								<p:selectOneMenu id="securedEntityType" value="#{userBean.securedEntityType}">
									<f:selectItem itemLabel="" />
									<f:selectItems
										value="#{userBean.securedEntityTypes.entrySet()}" var="item"
										itemLabel="#{item.key}" itemValue="#{item.value}" />
									<p:ajax listener="#{userBean.updateSelectedAccountBean}" />
								</p:selectOneMenu>
								<p:dataTable id="securedEntitiesDialogDatatable" var="e" paginator="true"
									resizableColumns="true" value="#{userBean.selectedAccountBean}" rows="10"
									selection="#{userBean.selectedEntity}" selectionMode="single"
									rowKey="#{e.id}" lazy="#{lazy}" rendered="#{userBean.selectedAccountBean != null}">
									<p:ajax event="rowSelect"
										listener="#{userBean.selectedAccountBean.onRowSelect}"
										oncomplete="PF('securedEntitiesDialog').hide()" update=":tabView:securedEntitiesDialogPanel" />
									<p:column headerText="#{messages['BusinessEntity.code']}">
										<h:outputText value="#{e.code}" />
									</p:column>
									<p:column headerText="#{messages['BusinessEntity.description']}">
										<h:outputText value="#{e.description}" />
									</p:column>
								</p:dataTable>
							</h:panelGroup>

<!-- 						<p:dialog id="securedEntitiesDialog" -->
<!-- 							header="#{messages['user.securedEntities']}" modal="true" -->
<!-- 							closeOnEscape="false" widgetVar="securedEntitiesDialog" -->
<!-- 							closable="false"> -->

<!-- 							<h:panelGroup id="securedEntitiesDialogPanel" layout="block" styleClass="search-panel"> -->
<!-- 								<p:messages /> -->
<!-- 								<p:selectOneMenu id="securedEntityType" value="#{userBean.securedEntityType}"> -->
<!-- 									<f:selectItem itemLabel="" /> -->
<!-- 									<f:selectItems -->
<!-- 										value="#{userBean.securedEntityTypes.entrySet()}" var="item" -->
<!-- 										itemLabel="#{item.key}" itemValue="#{item.value}" /> -->
<!-- 									<p:ajax listener="#{userBean.updateSelectedAccountBean}" /> -->
<!-- 								</p:selectOneMenu> -->
<!-- 								<p:dataTable id="securedEntitiesDialogDatatable" var="e" paginator="true" -->
<!-- 									resizableColumns="true" value="#{userBean.selectedAccountBean}" rows="10" -->
<!-- 									selection="#{userBean.selectedEntity}" selectionMode="single" -->
<!-- 									rowKey="#{e.id}" lazy="#{lazy}" rendered="#{userBean.selectedAccountBean != null}"> -->
<!-- 									<p:ajax event="rowSelect" -->
<!-- 										listener="#{userBean.selectedAccountBean.onRowSelect}" -->
<!-- 										oncomplete="PF('securedEntitiesDialog').hide()" update=":tabView:securedEntitiesDialogPanel" /> -->
<!-- 									<p:column headerText="#{messages['BusinessEntity.code']}"> -->
<!-- 										<h:outputText value="#{e.code}" /> -->
<!-- 									</p:column> -->
<!-- 									<p:column headerText="#{messages['BusinessEntity.description']}"> -->
<!-- 										<h:outputText value="#{e.description}" /> -->
<!-- 									</p:column> -->
<!-- 								</p:dataTable> -->
<!-- 							</h:panelGroup> -->


<!-- 						</p:dialog> -->
					</h:panelGroup>
				</p:tab>
			</p:tabView>
		</p:panel>
	</ui:define>

</ui:composition>
