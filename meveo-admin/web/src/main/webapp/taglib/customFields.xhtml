<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core"
    xmlns:p="http://primefaces.org/ui" xmlns:hf="http://java.sun.com/jsf/composite/tags" xmlns:o="http://omnifaces.org/ui" xmlns:hftl="http://hftl.org"
    xmlns:c="http://java.sun.com/jsp/jstl/core">

<!--
    A tag to manage custom field values of an entity
    Makes part of custom field management tag group 
    
    Attributes
        prefix - prefix for component to distinguish when used multiple times in save page
        backingBean - backing bean associated with entity
        entity - entity associated with custom fields. If not provided a backingBean.entity will be used
        edit - edit mode. Inherited from formPanel otherwise
        datePattern - date pattern for date entry/display
        dateTimePattern - date time pattern for period date display
        messagesId - an ID of messages component for validation messages
        
-->

<ui:composition>

    <c:if test="${empty(formLevelEdit)}">
        <c:set var="formLevelEdit" value="${backingBean.edit}" />
    </c:if>
    <c:if test="${empty(edit)}">
        <c:set var="edit" value="#{formLevelEdit}" />
    </c:if>
    <c:if test="${empty(datePattern)}">
        <c:set var="datePattern" value="#{paramBean.getProperty('meveo.dateFormat','dd/MM/yyyy')}" />
    </c:if>
    <c:if test="${empty(dateTimePattern)}">
        <c:set var="dateTimePattern" value="#{paramBean.getProperty('meveo.dateTimeFormat','dd/MM/yyyy HH:mm')}" />
    </c:if>
    <c:if test="${empty(messagesId)}">
        <c:set var="messagesId" value=":formPanel:formId:messages" />
    </c:if>
    <c:if test="${empty(prefix)}">
        <c:set var="prefix" value="cf" />
    </c:if>
    <c:if test="${empty(entity)}">
        <c:set var="entity" value="#{backingBean.entity}" />
    </c:if>
    <c:set var="newEntity" value="#{entity.transient}" />
    <c:set var="cfValueHolder" value="#{customFieldDataEntryBean.getFieldValueHolderByUUID(entity.uuid)}" />
    <c:set var="edit" value="#{edit and backingBean.canUserUpdateEntity()}" />

    <o:importFunctions type="org.meveo.service.base.ValueExpressionWrapper" var="exp" />

    <f:event listener="#{customFieldDataEntryBean.validateCustomFields(entity)}" type="postValidate" />

    <c:set var="index" value="0" />

    <c:forEach items="#{customFieldDataEntryBean.getGroupedFieldTemplates(entity).children}" var="cfTab" varStatus="cfTabStatus">
		
		<c:if test="${empty(tabLabel)}">
			<c:set var="tabLabel" value="#{cfTab.data eq 'Custom fields'? messages['customFieldTemplate.cfValues']: cfTab.data}"></c:set>
		</c:if>
		
        <p:tab title="#{tabLabel}">

            <c:forEach items="${cfTab.children}" var="cfFieldOrFg">
                <c:if test="#{cfFieldOrFg.type == 'field'}">
                    <c:set var="cft" value="#{cfFieldOrFg.data}" />
                    <c:if
                        test="#{((not cft.disabled) or (cft.disabled and not cfValueHolder.isAnyFieldEmptyForGui(cft))) and (!newEntity or (newEntity and !cft.hideOnNew)) and exp:evaluateToBoolean(cft.applicableOnEl,'entity',entity)}">
                        <hf:customField entity="#{entity}" cft="#{cft}" edit="#{edit}" messagesId="#{messagesId}" datePattern="#{datePattern}" dateTimePattern="#{dateTimePattern}"
                            prefix="#{prefix}" />
                    </c:if>
                </c:if>
                <c:if test="#{cfFieldOrFg.type == 'fieldGroup'}">
                    <p:panel header="#{cfFieldOrFg.data}">
                        <c:forEach items="${cfFieldOrFg.children}" var="cfField">
                            <c:set var="cft" value="#{cfField.data}" />
                            <c:if
                                test="#{((not cft.disabled) or (cft.disabled and not cfValueHolder.isAnyFieldEmptyForGui(cft))) and (!newEntity or (newEntity and !cft.hideOnNew)) and exp:evaluateToBoolean(cft.applicableOnEl,'entity',entity)}">
                                <hf:customField entity="#{entity}" cft="#{cft}" edit="#{edit}" messagesId="#{messagesId}" datePattern="#{datePattern}"
                                    dateTimePattern="#{dateTimePattern}" prefix="#{prefix}" />
                            </c:if>
                        </c:forEach>
                    </p:panel>
                </c:if>
            </c:forEach>

            <c:if test="#{cfTabStatus.first}">
                <p:dialog id="#{prefix}dlg_periodValues" widgetVar="#{prefix}periodValuesDialogWidget" header="#{messages['customFieldTemplate.periodValues']}" closeOnEscape="true"
                    modal="true" appendTo="@(body)" width="900">

                    <p:panel>
                        <h:panelGroup id="#{prefix}periodFields" layout="block" styleClass="form-panel">
                            <hftl:decorateFormField fieldId="#{prefix}period_start_date" label="#{messages['customFieldTemplate.periodDate']}">
                                <h:outputText id="#{prefix}period_start_date" value="#{cfValueHolder.selectedValuePeriod.periodStartDate}">
                                    <f:convertDateTime type="date" pattern="#{dateTimePattern}" />
                                </h:outputText>
                            </hftl:decorateFormField>
                            <hftl:decorateFormField fieldId="#{prefix}period_end_date" label="#{messages['customFieldTemplate.periodEndDate']}">
                                <h:outputText id="#{prefix}period_end_date" value="#{cfValueHolder.selectedValuePeriod.periodEndDate}">
                                    <f:convertDateTime type="date" pattern="#{dateTimePattern}" />
                                </h:outputText>
                            </hftl:decorateFormField>
                            <p:remoteCommand name="updateMasterTable" update="#{cfValueHolder.selectedValuePeriodId}" process="@this" partialSubmit="true"
                                partialSubmitFilter=":not([name*='addNewFields'])" />
                            <!--  only customFieldListTable as for simple values no need to show a periodvalue dialog -->
                            <hftl:customFieldListTable edit="#{edit}" cft="#{cfValueHolder.selectedFieldTemplate}" entity="#{entity}"
                                field="#{cfValueHolder.selectedValuePeriod.cfValue}" updateOnAddEdit="#{cfValueHolder.selectedValuePeriodId}" messagesId="#{messagesId}"
                                popupWidgetVar="#{prefix}periodValuesDialogWidget" prefix="#{prefix}" datePattern="#{datePattern}" componentWidth="100" />

                        </h:panelGroup>
                    </p:panel>
                </p:dialog>
            </c:if>
        </p:tab>
        <c:set var="index" value="#{index+1}" />
    </c:forEach>

</ui:composition>
</html>