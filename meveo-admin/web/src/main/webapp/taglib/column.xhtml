<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:hf="http://java.sun.com/jsf/composite/tags"
	xmlns:c="http://java.sun.com/jsp/jstl/core">

<!-- 

    Makes part of "happy faces" component group.
    A custom tag to enhance p:column component.
        
    Can be used inside any p:datatable type component including hftl:datalist 
    
    Attributes
        entity - a p:datatable model iteration variable. If not provided, defaults to #{entity} - a default iteration variable of hftl:datalist
        field - a name of a field in an entity
        isList - is field value is a collection - supports both List, Map and Set type fields.
        isDate - is entity field or a list value item field is a date
        sort - is column sortable
        rendered - should a column be rendered
        exportable - is value exportable
        
    Attributes for list type fields
        valueLabelField - used along with isList="true". Specifies a name of a field in list value item.
        
                
    Attributes for date type values
        datePattern - date pattern to apply in date value output. If not provided, time attribute is consulted whether to add time part to a date 
        time - should a date selection be time specific.  
        

    Attributes for other type values
        isMessage - should field or valueLabelField value be treated as message key. In case of boolean, boolean value is converted to translatable commons.yes/no value.
        messagePrefix - a prefix to append to value to form a full message key.
        converter - converter to apply
    
    Attributes to render a link to an entity        
        entityView - render a link to an entity when isList="false" or list value item  when isList="true". Specifies view outcome.
        valueIdField - used along with entityView attribute. Specifies a field in an entity when isList="false" or in a list value item when isList="true" to obtain entity identifier value
        propagateConversation - propagate conversation id in a link to an entity view 
        renderLinkInEdit - should a link to an entity view open edit mode
        useCustomIdParam and objectIdParamName - should a custom parameter id instead of a default "objectId" be used for navigation 
    
    Note: field, valueLabelField and valueIdField can be a single field name or a field name hierarchy containing "." (unlimited) (e.g. address.email)
    
-->    


<ui:composition>

	<c:if test="${empty childField}">
		<c:set var="fieldName" value="#{field}" />
	</c:if>

	<c:if test="${not empty childField}">
		<c:set var="fieldName" value="#{childField}" />
	</c:if>

	<c:if test="${empty isMessage}">
		<c:set var="isMessage" value="false" />
	</c:if>

    <c:if test="${!empty messagePrefix}">
        <c:set var="messagePrefix" value="${messagePrefix.concat('.')}" />
    </c:if>
        
	<c:if test="${empty show}">
		<c:set var="show" value="true" />
	</c:if>

	<c:if test="${empty isDate}">
		<c:set var="isDate" value="false" />
	</c:if>

	<c:if test="${empty time}">
		<c:set var="time" value="false" />
	</c:if>

	<c:if test="${time}">
		<c:set var="datePattern"
			value="#{paramBean.getProperty('meveo.dateTimeFormat','dd/MM/yyyy HH:mm')}" />
	</c:if>

	<c:if test="${!time}">
		<c:set var="datePattern"
			value="#{paramBean.getProperty('meveo.dateFormat','dd/MM/yyyy')}" />
	</c:if>

	<c:if test="${empty isList}">
		<c:set var="isList" value="false" />
	</c:if>
	<c:if test="${isList}">
		<c:set var="sort" value="false"/>
	</c:if>
    
    <c:if test="${empty isMap}">
        <c:set var="isMap" value="false" />
    </c:if>

	<c:if test="${empty sort}">
		<c:set var="sort" value="true" />
	</c:if>

	<c:if test="${empty childFieldId}">
		<c:set var="childFieldId" value="id" />
	</c:if>
	
	<c:if test="${empty rendered}">
		<c:set var="rendered" value="true" />
	</c:if>

	<c:if test="${empty exportable}">
		<c:set var="exportable" value="true" />
		<c:if test="${isList}">
			<!-- List columns are not exportable, because its ui:reapeat component. -->
			<c:set var="exportable" value="false" />
		</c:if>
	</c:if>

	<c:set var="converter"
		value="#{getConverter.forType(entity[field], converterParam)}"></c:set>

	<c:if test="${empty propagateConversation}">
		<c:set var="propagateConversation" value="true" />
	</c:if>
	<c:if test="${empty renderEditLink}">
		<c:set var="renderEditLink" value="true" />
	</c:if>
	<c:if test="${empty objectIdParamName}">
		<c:set var="objectIdParamName" value="objectId" />
	</c:if>
	<c:if test="${useCustomIdParam}">
		<c:set var="objectIdParamName" value="#{backingBean.idParameterName}" />
	</c:if>
	<c:if test="${empty editView}">
		<c:set var="editView" value="#{backingBean.getEditViewName()}" />
	</c:if>
	<c:if test="${empty edit}">
		<c:set var="edit" value="true"/>
	</c:if>
			
	<p:column exportable="#{exportable}" rendered="#{rendered}" >
		<f:facet name="header">
			<h:outputText value="#{label}" />
		</f:facet>

		<!-- If there is no child field, just show fieldValue. However if fieldValue can be message check if it is not boolean first
        	if so use standard yes and no messages. If its not boolean just translate fieldValue message. 
        	Also if childField is not set then it basically means it can't be isList=true even if it is set, so we don't check isList here.-->
		<c:if test="#{empty childField}">
			<c:if test="#{sort}">
				<f:attribute name="field" value="#{field}" />
                <f:attribute name="sortable" value="#{true}" />
                <f:attribute name="sortBy" value="#{null}" />
			</c:if>
			<c:if test="#{isMessage}">
				<h:outputText
					rendered="#{entity[field] != null and entity[field].toString() == 'true'}"
					value="#{messages['commons.yes']}" />
				<h:outputText
					rendered="#{entity[field] != null and entity[field].toString() == 'false'}"
					value="#{messages['commons.no']}" />
				<h:outputText
					rendered="#{entity[field] != null and entity[field].toString() != 'true' and entity[field].toString() != 'false'}"
					value="#{messages[''.concat(messagePrefix).concat(entity[field])]}" />
			</c:if>
			<c:if test="#{not isMessage and not isMap}">
				<!-- If there is date field, show date in specified pattern 
		    	 If isDate is not set then it basically means it is not a date. Also if time is not set it basically means that time=true
		    	 -->
		    	<c:choose>
		    		<c:when test="#{field eq 'code'}">
		    			<p:tooltip for="#{resultsId}_#{field}_editlink"
							value="#{messages['commons.edit']}" showEffect="slide"
								hideEffect="slide" />
						<h:link id="#{resultsId}_#{field}_editlink" outcome="#{editView}"
							rendered="#{renderEditLink}" value="#{entity[field]}">
							<f:param name="#{objectIdParamName}" value="#{entity.id}" />
							<f:param name="edit" value="#{edit}" />
							<c:if test="${propagateConversation}">
								<f:param name="cid"
								value="#{javax.enterprise.context.conversation.id}" />
							</c:if>
						</h:link>
		    		</c:when>
		    		<c:otherwise>
		    			<h:outputText value="#{entity[field]}"
							rendered="#{!isDate and show}" converter="#{converter}">
						</h:outputText>
						<h:outputText value="#{entity[field]}" rendered="#{isDate}">
							<f:convertDateTime pattern="#{datePattern}" />
						</h:outputText>
		    		</c:otherwise>
		    	</c:choose>
			</c:if>
            
            <!-- If its map then run through it and show results. -->
            <c:if test="#{isMap}">
                <c:set var="map" value="#{entity[field]}" />
                <ui:repeat value="#{map.keySet().toArray()}" var="key">
                    <h:outputText value="#{key}" /> = <h:outputText value="#{map[key]}" /> 
                    <br />
                </ui:repeat>
            </c:if>
		</c:if>

		<!-- If childField parameter is provided that means fieldValue is entity, enum or list. -->
		<c:if test="#{not empty childField}">
			<c:if test="#{sort}">
			   <c:choose>
			   		<c:when test="${sortByField}">
						<f:attribute name="field" value="#{field}" />
                        <f:attribute name="sortable" value="#{true}" />
                        <f:attribute name="sortBy" value="#{null}" />
					</c:when>    
			    	<c:otherwise>
						<f:attribute name="field" value="#{field}.#{childField}" />
                        <f:attribute name="sortable" value="#{true}" />
                        <f:attribute name="sortBy" value="#{null}" />
					</c:otherwise>
			   </c:choose>
			</c:if>
			<!-- If field is not list, then it means it is either another entity or enum. -->
			<c:if test="#{not isList}">
				<!-- If childField ID is not provided then we dont need link to entity page. -->
				<c:if test="#{empty entityView}">
					<c:if test="#{isMessage}">
						<h:outputText
							rendered="#{entity[field][childField] != null and entity[field][childField].toString() == 'true'}"
							value="#{messages['commons.yes']}" />
						<h:outputText
							rendered="#{entity[field][childField] != null and entity[field][childField].toString() == 'false'}"
							value="#{messages['commons.no']}" />
						<h:outputText
							rendered="#{entity[field][childField] != null and entity[field][childField].toString() != 'true' and entity[field][childField].toString() != 'false'}"
							value="#{messages[entity[field][childField]]}" />
					</c:if>
                    <c:if test="#{!isMessage}">
    					<h:outputText value="#{entity[field][childField]}" rendered="#{!isDate}"/>
                        <h:outputText value="#{entity[field][childField]}" rendered="#{isDate}">
                            <f:convertDateTime pattern="#{datePattern}" />
                        </h:outputText>
                    </c:if>
				</c:if>
				<!-- If entityView provided then show link to childField entity page. -->
				<c:if test="#{not empty entityView and not exportable}">
					<hf:linkToEntity linkId="#{field}_#{childField}_message_link"
						rendered="#{isMessage}" entity="#{entity[field]}"
						popupFields="#{popupFields}"
						entityId="#{entity[field][childFieldId]}"
						value="#{messages[entity[field][childField]]}"
						view="#{entityView}" />
					<hf:linkToEntity linkId="#{field}_#{childField}_link"
						rendered="#{not isMessage}" entity="#{entity[field]}"
						popupFields="#{popupFields}"
						entityId="#{entity[field][childFieldId]}"
						value="#{entity[field][childField]}" view="#{entityView}" />
				</c:if>
				<!-- Special case workaround for exportable entity column. It needs to be copied from hf:linkToEntity, because Exporter does not recognize 
					composite component (http://code.google.com/p/primefaces/issues/detail?id=1797) 
					If in the future this could be fixed somehow, this part could be removed and only normal hf:linkToEntity component could be left-->
				<c:if test="#{not empty entityView and exportable}">
					<c:if test="#{isMessage}">
						<h:link id="#{field}_#{childField}_message_link"
							value="#{messages[entity[field][childField]]}"
							outcome="#{entityView}">
							<f:param name="objectId" value="#{entity[field][childFieldId]}" />
						</h:link>
						<p:tooltip rendered="#{not empty popupFields}"
							for="#{field}_#{childField}_message_link" showEffect="slide"
							hideEffect="slide">
							<ui:repeat value="#{popupFields.split(',')}" var="entityFields">
								<h:outputText style="white-space:nowrap"
									value="#{entity[field][entityFields]}" />
								<br />
							</ui:repeat>
						</p:tooltip>
					</c:if>
					<c:if test="#{not isMessage}">
						<h:link id="#{field}_#{childField}_message_link"
							value="#{entity[field][childField]}" outcome="#{entityView}">
							<f:param name="objectId" value="#{entity[field][childFieldId]}" />
							<f:param name="cid" value="#{javax.enterprise.context.conversation.id}" />
							<f:param name="edit" value="#{edit}" />
						</h:link>
						<p:tooltip rendered="#{not empty popupFields}"
							for="#{field}_#{childField}_message_link" showEffect="slide"
							hideEffect="slide">
							<ui:repeat value="#{popupFields.split(',')}" var="entityFields">
								<h:outputText style="white-space:nowrap"
									value="#{entity[field][entityFields]}" />
								<br />
							</ui:repeat>
						</p:tooltip>
					</c:if>
				</c:if>
			</c:if>

			<!-- If its list then run through it and show results. -->
			<c:if test="#{isList}">
				<c:set var="list" value="#{entity[field]}" />
				<ui:repeat value="#{entity[field].toArray()}" var="c">
					<!-- If childField ID is not provided then we dont need link to entity page. -->
					<c:if test="#{empty entityView}">
						<c:if test="#{isMessage}">
							<h:outputText
								rendered="#{c[childField] != null and c[childField].toString() == 'true'}"
								value="#{messages['commons.yes']}" />
							<h:outputText
								rendered="#{c[childField] != null and c[childField].toString() == 'false'}"
								value="#{messages['commons.no']}" />
							<h:outputText
								rendered="#{c[childField] != null and c[childField].toString() != 'true' and c[childField].toString() != 'false'}"
								value="#{messages[c[childField]]}" />
						</c:if>
						<h:outputText rendered="#{not isMessage}" value="#{c[childField]}" />
					</c:if>
					<!-- If entityView provided then show link to childField entity page. -->
					<c:if test="#{not empty entityView}">
						<hf:linkToEntity linkId="#{field}_#{childField}_message_link"
							rendered="#{isMessage}" entityId="#{c[childFieldId]}"
							entity="#{c}" popupFields="#{popupFields}"
							value="#{c[childField]}" view="#{entityView}" />
						<hf:linkToEntity linkId="#{field}_#{childField}_link"
							rendered="#{not isMessage}" entity="#{c}"
							popupFields="#{popupFields}" entityId="#{c[childFieldId]}"
							value="#{c[childField]}" view="#{entityView}" />
					</c:if>
					<br />
				</ui:repeat>
			</c:if>
		</c:if>
		<ui:insert />
	</p:column>

</ui:composition>

</html>
