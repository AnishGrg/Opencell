<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core"
    xmlns:p="http://primefaces.org/ui" xmlns:pe="http://primefaces.org/ui/extensions" xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:cc="http://java.sun.com/jsf/composite"
    xmlns:o="http://omnifaces.org/ui" xmlns:hftl="http://hftl.org" xmlns:hf="http://java.sun.com/jsf/composite/tags">

<!-- 
    A tag displaying or editing a custom field value of type list/map and bound to CustomFieldValue type variable
    Makes part of custom field management tag group 

    Attributes
        cft - custom field template containing field definition
        edit - should value be displayed, or edit control be shown
        field - field storing a value - CustomFieldValue type variable only
        datePattern - date pattern for date entry/display
        required - if a value is required
        backingBean - backing bean
        messagesId - messages id tag to update for general errors
        popupWidgetVar - a name of a popup widget var if used inside a popup
        updateOnAddEdit - ids of controlls to update uppon data changes (value edit/create/delete)
        disabled - is field non-editable
 -->

<ui:composition>
    <h:outputText value="#{''}" />
    <c:if test="${empty(datePattern)}">
        <c:set var="datePattern" value="#{paramBean.getProperty('meveo.dateFormat','dd/MM/yyyy')}" />
    </c:if>
    <o:importConstants type="org.meveo.model.crm.CustomFieldStorageTypeEnum" />
    <o:importConstants type="org.meveo.model.crm.CustomFieldTypeEnum" />

    <hftl:decorateFormField label="#{cft.description}#{cft.valueRequired?' *':''}" componentWidth="100" displayOneLine="false">
        <p:messages id="cfMessages" globalOnly="false" redisplay="false" />

        <c:if test="#{cft.storageType eq CustomFieldStorageTypeEnum.LIST or cft.storageType eq CustomFieldStorageTypeEnum.MAP}">
            <p:dataTable id="customFields_map_omitFromSubmit" lazy="false" value="#{field.mapValuesForGUI}" var="mapValues" editable="#{edit and !disabled}" editMode="cell"
                reflow="false" resizableColumns="true" rowIndexVar="rowIndex">

                <p:ajax event="cellEdit" update="#{messagesId} #{updateOnAddEdit}" partialSubmit="true" partialSubmitFilter=":not([name*='addNewFields'])" />
                <p:column headerText="#{messages['commons.key']}" rendered="#{cft.storageType eq CustomFieldStorageTypeEnum.MAP}">
                    <p:cellEditor>
                        <f:facet name="output">
                            <h:outputText value="#{mapValues['key']}" styleClass="field-value" />
                        </f:facet>
                        <f:facet name="input">
                            <h:inputText value="#{mapValues['key']}" size="20" maxlength="50" />
                        </f:facet>
                    </p:cellEditor>
                </p:column>
                <p:column headerText="#{messages['commons.value']}">
                    <p:cellEditor>
                        <f:facet name="output">
                            <hftl:customFieldValueMuteField edit="false" id="cfValue_out" cft="#{cft}" field="#{mapValues['value']}" label="#{messages['commons.value']}"
                                backingBean="#{backingBean}" />
                        </f:facet>
                        <f:facet name="input">
                            <hftl:customFieldValueMuteField edit="true" id="cfValue_in" cft="#{cft}" field="#{mapValues['value']}" label="#{messages['commons.value']}"
                                required="true" backingBean="#{backingBean}" />
                        </f:facet>
                    </p:cellEditor>
                </p:column>
                <p:column headerText="#{messages['commons.actions']}" rendered="#{edit and !disabled}" width="15%">
                    <p:commandButton icon="ui-icon-minus" partialSubmit="true" process="@this" update="#{updateOnAddEdit} customFields_map_omitFromSubmit"
                        action="#{field.mapValuesForGUI.remove(mapValues)}" />
                </p:column>
                <f:facet name="footer" layout="block">
                    <p:messages id="cfNewFieldsMessage" globalOnly="false" redisplay="false" />
                    <hf:namingContainer id="addNewFields" rendered="#{edit and !disabled}">

                        <c:if test="#{cft.storageType eq CustomFieldStorageTypeEnum.MAP}">
                            <c:if test="#{cft.mapKeyType eq CustomFieldMapKeyEnum.STRING}">
                                <p:inputText id="newKey" value="#{backingBean.customFieldNewValue[cft.code.concat('_key')]}" required="true"
                                    placeholder="#{messages['commons.key']}" label="#{messages['commons.key']}" size="30" maxlength="50" />
                            </c:if>

                            <c:if test="#{cft.mapKeyType eq CustomFieldMapKeyEnum.RON}">

                                <p:inputText id="newRonKeyFrom" value="#{backingBean.customFieldNewValue[cft.code.concat('_key_one_from')]}" converter="javax.faces.Double"
                                    placeholder="#{messages['customFieldTemplate.mapKeyRonFrom']}" label="#{messages['customFieldTemplate.mapKeyRonFrom']}" size="9" maxlength="15" />
                                <h:outputText value=" - " />
                                <p:inputText id="newRonKeyTo" value="#{backingBean.customFieldNewValue[cft.code.concat('_key_one_to')]}" converter="javax.faces.Double"
                                    placeholder="#{messages['customFieldTemplate.mapKeyRonTo']}" label="#{messages['customFieldTemplate.mapKeyRonTo']}" size="9" maxlength="15" />
                            </c:if>

                            <h:outputText value=" &nbsp; " escape="false" />
                        </c:if>

                        <hftl:customFieldValueMuteField id="newValue" edit="true" cft="#{cft}" field="#{backingBean.customFieldNewValue[cft.code.concat('_value')]}" required="true"
                            label="#{messages['commons.value']}" placeholder="#{messages['commons.value']}" backingBean="#{backingBean}" />
                    </hf:namingContainer>

                    <c:if test="#{!empty(popupWidgetVar) and !disabled}">
                        <p:commandButton value="#{messages['commons.addNew']}" partialSubmit="true" process="@this addNewFields" update="customFields_map_omitFromSubmit"
                            action="#{backingBean.addValueToMap(field, cft)}" oncomplete="if (args &amp;&amp; !args.validationFailed) updateMasterTable()">
                            <p:resetInput target="addNewFields" />
                        </p:commandButton>
                    </c:if>

                    <c:if test="#{empty(popupWidgetVar) and !disabled}">
                        <p:commandButton value="#{messages['commons.addNew']}" partialSubmit="true" process="@this addNewFields" update="customFields_map_omitFromSubmit"
                            action="#{backingBean.addValueToMap(field, cft)}">
                            <p:resetInput target="addNewFields" />
                        </p:commandButton>
                    </c:if>

                    <p:commandButton value="#{messages['commons.close']}" process="@this" rendered="#{!empty(popupWidgetVar)}" update="@this #{updateOnAddEdit}"
                        oncomplete="PF('#{popupWidgetVar}').hide(); updateMasterTable()" actionListener="#{backingBean.populateCustomFieldNewValueDefaults(null)}">
                    </p:commandButton>

                </f:facet>
            </p:dataTable>
        </c:if>


        <c:if test="#{cft.storageType eq CustomFieldStorageTypeEnum.MATRIX}">
            <p:dataTable id="customFields_map_omitFromSubmit" lazy="false" value="#{field.matrixValuesForGUI}" var="mapValues" editable="#{edit and !disabled}" editMode="cell"
                reflow="false" resizableColumns="true" rowIndexVar="rowIndex">

                <p:ajax event="cellEdit" update="#{messagesId} #{updateOnAddEdit}" partialSubmit="true" partialSubmitFilter=":not([name*='addNewFields'])" />
                <p:columns value="#{cft.matrixColumnsSorted}" var="column" headerText="#{column.label}">
                    <p:cellEditor>
                        <f:facet name="output">
                            <h:outputText value="#{mapValues[column.code]}" styleClass="field-value" />
                        </f:facet>
                        <f:facet name="input">
                            <h:inputText value="#{mapValues[column.code]}" size="20" maxlength="50" rendered="#{column.keyType eq CustomFieldMapKeyEnum.STRING}" />
                            <p:inputText value="#{mapValues[column.code]}" size="20" maxlength="30" rendered="#{column.keyType eq CustomFieldMapKeyEnum.RON}">
                                <pe:keyFilter regEx="/[0-9.&lt;]/" />
                                <o:validator validatorId="javax.faces.RegularExpression" pattern="(([0-9]+)(\.[0-9]+)?)?&lt;(([0-9]+)(\.[0-9]+)?)?"
                                    message="#{messages['customFieldTemplate.ronInvalid']}" />
                            </p:inputText>
                        </f:facet>
                    </p:cellEditor>
                </p:columns>
                <p:column headerText="#{messages['commons.value']}" width="20%">
                    <p:cellEditor>
                        <f:facet name="output">
                            <hftl:customFieldValueMuteField edit="false" cft="#{cft}" field="#{mapValues['value']}" label="#{messages['commons.value']}"
                                backingBean="#{backingBean}" />
                        </f:facet>
                        <f:facet name="input">
                            <hftl:customFieldValueMuteField edit="true" cft="#{cft}" field="#{mapValues['value']}" label="#{messages['commons.value']}" required="true"
                                backingBean="#{backingBean}" />
                        </f:facet>
                    </p:cellEditor>
                </p:column>
                <f:facet name="footer" layout="block">

                    <p:commandButton value="#{messages['customFieldTemplate.addRow']}" partialSubmit="true" process="@this" update="customFields_map_omitFromSubmit"
                        action="#{backingBean.addMatrixRow(cft, field.matrixValuesForGUI)}">
                    </p:commandButton>

                    <p:commandButton value="#{messages['commons.close']}" process="@this" rendered="#{!empty(popupWidgetVar)}" update="@this #{updateOnAddEdit}"
                        oncomplete="PF('#{popupWidgetVar}').hide(); updateMasterTable()" actionListener="#{backingBean.populateCustomFieldNewValueDefaults(null)}">
                    </p:commandButton>

                </f:facet>
            </p:dataTable>

        </c:if>
    </hftl:decorateFormField>
</ui:composition>
</html>
