<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:s="http://jboss.com/products/seam/taglib"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:rich="http://richfaces.org/rich"
	xmlns:a="http://richfaces.org/a4j"
	xmlns:mnt="http://manaty.net/jsf/core"
	xmlns:c="http://java.sun.com/jstl/core">

<ui:composition>

	<!-- The required attribute is optional, 
         initialize it to false if not found. -->
    <c:if test="${empty noSelectionLabel}">
		<c:set var="noSelectionLabel" value="true" />
	</c:if>    
	 
	<c:if test="${empty required}">
		<c:set var="required" value="false" />
	</c:if>
	
	<c:if test="${empty useConverter}">
		<c:set var="useConverter" value="true" />
	</c:if>

	<c:if test="${empty validateUnique}">
		<c:set var="validateUnique" value="false" />
	</c:if>
	<c:if test="${empty validateRib}">
		<c:set var="validateRib" value="false" />
	</c:if>
	
	<!-- Show form field -->
	<c:if test="${empty show}">
		<c:set var="show" value="true" />
	</c:if>
	<c:if test="${!empty objectId and !empty showOnlyOnNew}">
		<c:set var="show" value="false" />
	</c:if>
	<c:if test="${empty objectId and !empty showOnlyOnNew}">
		<c:set var="show" value="true" />
	</c:if>	
	<c:if test="${empty objectId and !empty showOnlyOnConsult}">
		<c:set var="show" value="false" />
	</c:if>	
	
	<!-- Default size -->
	<c:if test="${empty size}">
		<c:set var="size" value="20" />
	</c:if>
	<c:if test="${empty maxlength}">
		<c:set var="maxlength" value="40" />
	</c:if>
	
	<c:if test="${empty deleteButton}">
		<c:set var="deleteButton" value="true" />
	</c:if>

	<!-- If edit parameter not set -->
	<c:if test="${empty edit}">
		<c:set var="edit" value="false" />
	</c:if>

	<!-- Default negative -->
	<c:if test="${empty negative}">
		<c:set var="negative" value="false" />
	</c:if>

	<!-- Default Data Pattern -->
	<c:if test="${empty time}">
		<c:set var="time" value="true" />
	</c:if>
	
	<c:if test="${empty resetTimeOnDateSelect}">
		<c:set var="resetTimeOnDateSelect" value="true" />
	</c:if>
	<c:if test="${time}">
		<c:set var="datePattern" value="#{messages['meveo.dateTimeFormat']}" />
	</c:if>
	
	<c:if test="${!time}">
		<c:set var="datePattern" value="#{messages['meveo.dateFormat']}" />
	</c:if>
	<c:if test="${time}">
		<c:set var="defaultTime" value="#{messages['meveo.defaultTime']}" />
	</c:if>
	
	
	<!-- Default list type -->
	 <c:if test="${empty listType}">
        <c:set var="listType" value="simpleList" />
     </c:if>
     <c:if test="${empty showButtonAddNew}">
        <c:set var="showButtonAddNew" value="true" />
     </c:if>
     
      <c:if test="${empty disabled}">
        <c:set var="disabled" value="false" />
     </c:if>
     
	<c:if test="${show}">
		<!--  Initialize the value binding -->
		<mnt:setValueBinding var="vb" valueBinding="#{entity[field]}" />
		 <c:if test="${popup}">
		        <c:set var="childEntity" value="#{entity[field]}" />
		        <s:decorate template="/layout/edit.xhtml">
		    		<ui:define name="label">
		    			<h:outputText value="#{label}" />
		    		</ui:define>
			    	<h:panelGrid columns="3" >
				    	<h:inputText rendered="#{edit and entity[field]!=null}" value="#{entity[field]}" required="${required}" size="#{size}" disabled="true"/>
				    	<h:inputHidden rendered="#{edit and entity[field]==null}" required="${required}"/>
				    	<h:inputText rendered="#{edit and entity[field]==null}" value="" size="#{size}" required="${required}" disabled="true" />
				    	<a:commandLink  rendered="#{edit}" id="selectLink" onclick="Richfaces.showModalPanel('#{popupId}');" >
			                 <h:graphicImage value="/img/search.gif" style="border:0"/>
			            </a:commandLink>
						<rich:toolTip for="selectLink" value="#{messages['commons.search']}"/>
			            <h:outputText rendered="#{!edit}"  style="font-weight:bold;" />
			        </h:panelGrid>
		       	</s:decorate>
		    </c:if>
	<c:if test="${!popup}">
		<!--  If the value binding is a string, display an inputText field. -->
		<mnt:isText id="vb">
			<s:decorate template="/layout/edit.xhtml">
				<ui:define name="label">
					<h:outputText value="#{label}" />
				</ui:define>
				<c:if test="${empty textArea}">
					<c:if test="${useConverter}">
						<h:inputText rendered="#{edit}" id="#{field}" disabled="#{disabled}"
							value="#{entity[field]}" required="${required}" size="#{size}" maxlength="#{maxlength}" converter="stringConverter">
							<c:if test="${validateUnique}">
								<f:validator validatorId="uniqueConstraintValidator"/>
	      						<f:attribute name="className" value="#{entity.getClass().getSimpleName()}"/>
	      						<f:attribute name="fieldName" value="#{field}"/>
	      						<f:attribute name="idValue" value="#{entity.getId()}"/>
	      					</c:if>
	      					<c:if test="${validateRib}">
	      						<f:validator validatorId="ribValidator"/>
	      						<f:attribute name="bankCodeId" value="#{rich:clientId('bankCode')}"/>
	      						<f:attribute name="branchCodeId" value="#{rich:clientId('branchCode')}"/>
	      						<f:attribute name="accountNumberId" value="#{rich:clientId('accountNumber')}"/>
	      						<f:attribute name="keyId" value="#{rich:clientId('key')}"/>
	      					</c:if>
						</h:inputText>
					</c:if>
					<c:if test="${!useConverter}">
						<h:inputText rendered="#{edit}" id="#{field}" disabled="#{disabled}"
							value="#{entity[field]}" required="${required}" size="#{size}" maxlength="#{maxlength}">
							<c:if test="${validateUnique}">
								<f:validator validatorId="uniqueConstraintValidator"/>
	      						<f:attribute name="className" value="#{entity.getClass().getSimpleName()}"/>
	      						<f:attribute name="fieldName" value="#{field}"/>
	      						<f:attribute name="idValue" value="#{entity.getId()}"/>
	      					</c:if>
	      					<c:if test="${validateRib}">
	      						<f:validator validatorId="ribValidator"/>
	      						<f:attribute name="bankCodeId" value="#{rich:clientId('bankCode')}"/>
	      						<f:attribute name="branchCodeId" value="#{rich:clientId('branchCode')}"/>
	      						<f:attribute name="accountNumberId" value="#{rich:clientId('accountNumber')}"/>
	      						<f:attribute name="keyId" value="#{rich:clientId('key')}"/>
	      					</c:if>
						</h:inputText>
					</c:if>
				</c:if>
				<c:if test="${!empty textArea}">
					<h:inputTextarea rendered="#{edit}" id="#{field}" disabled="#{disabled}" value="#{entity[field]}" required="${required}" cols="#{cols}" rows="#{rows}" maxlength="#{maxlength}"/>
				</c:if>
				<h:outputText rendered="#{!edit}" value="#{entity[field]}" style="font-weight:bold;"  />
				<ui:insert />
			</s:decorate>
		</mnt:isText>
	
		<!--  If the value binding is a number, display an input number spinner. -->
		<mnt:isInteger id="vb">
			<s:decorate template="/layout/edit.xhtml">
				<ui:define name="label">
					<h:outputText value="#{label}" />
				</ui:define>
				<rich:inputNumberSpinner rendered="#{edit}" id="#{field}" disabled="#{disabled}"
					value="#{entity[field]}" required="${required}">
					<f:validateLongRange minimum="0" rendered="#{negative}" />
				</rich:inputNumberSpinner>
				<h:outputText rendered="#{!edit}" value="#{entity[field]}" style="font-weight:bold;"/>
				<ui:insert />
			</s:decorate>
		</mnt:isInteger>
		
		<!--  If the value binding is a number, display an input number spinner. -->
		<mnt:isBigDecimal id="vb">
			<s:decorate template="/layout/edit.xhtml">
				<ui:define name="label">
					<h:outputText value="#{label}" />
				</ui:define>
				<h:inputText rendered="#{edit}" id="#{field}" disabled="#{disabled}"
					value="#{entity[field]}" required="${required}" size="5" maxlength="#{maxlength}" converter="bigDecimalConverter" />								
				<c:if test="${empty converterParam}">
					<h:outputText rendered="#{!edit}" value="#{entity[field]}" style="font-weight:bold;"  converter="bigDecimalConverter" />
				</c:if>
				<c:if test="${!empty converterParam}">
					<h:outputText rendered="#{!edit}" value="#{entity[field]}" style="font-weight:bold;"  converter="bigDecimal4DigitsConverter" />
				</c:if>
				<ui:insert />
			</s:decorate>
		</mnt:isBigDecimal>
	
		<!--  If the value binding is a number, display an input number spinner. -->
		<mnt:isByte id="vb">
			<s:decorate template="/layout/edit.xhtml">
				<ui:define name="label">
					<h:outputText value="#{label}" />
				</ui:define>
				<rich:inputNumberSpinner rendered="#{edit}" id="#{field}" disabled="#{disabled}"
					value="#{entity[field]}" required="${required}">
					<f:validateLongRange minimum="0" rendered="#{negative}" />
				</rich:inputNumberSpinner>
				<h:outputText rendered="#{!edit}" value="#{entity[field]}" style="font-weight:bold;"/>
				<ui:insert />
			</s:decorate>
		</mnt:isByte>
	
		<!--  If the value binding is a rational number, display an input text field. -->
		<mnt:isDouble id="vb">
			<s:decorate template="/layout/edit.xhtml">
				<ui:define name="label">
					<h:outputText value="#{label}" />
				</ui:define>
				<h:inputText rendered="#{edit}" id="#{field}" disabled="#{disabled}"
					value="#{entity[field]}" required="${required}" size="5">
					<f:validateDoubleRange minimum="0" rendered="#{negative}" />
				</h:inputText>
				<h:outputText rendered="#{!edit}" value="#{entity[field]}" style="font-weight:bold;"/>
				<ui:insert />
			</s:decorate>
		</mnt:isDouble>
	
		<mnt:isFloat id="vb">
			<s:decorate template="/layout/edit.xhtml">
				<ui:define name="label">
					<h:outputText value="#{label}" />
				</ui:define>
				<h:inputText rendered="#{edit}" id="#{field}" disabled="#{disabled}"
					value="#{entity[field]}" required="${required}" size="5" maxlength="#{maxlength}">
					<f:validateDoubleRange minimum="0" rendered="#{negative}" />
				</h:inputText>
				<h:outputText rendered="#{!edit}" value="#{entity[field]}" style="font-weight:bold;"/>
				<ui:insert />
			</s:decorate>
		</mnt:isFloat>
	
		<mnt:isLong id="vb">
			<s:decorate template="/layout/edit.xhtml">
				<ui:define name="label">
					<h:outputText value="#{label}" />
				</ui:define>
				<h:inputText rendered="#{edit}" id="#{field}" disabled="#{disabled}"
					value="#{entity[field]}" required="${required}" size="5" maxlength="#{maxlength}">
					<f:validateDoubleRange minimum="0" rendered="#{negative}" />
				</h:inputText>
				<h:outputText rendered="#{!edit}" value="#{entity[field]}" style="font-weight:bold;" />
				<ui:insert />
			</s:decorate>
		</mnt:isLong>
	
		<mnt:isShort id="vb">
			<s:decorate template="/layout/edit.xhtml">
				<ui:define name="label">
					<h:outputText value="#{label}" />
				</ui:define>
				<h:inputText rendered="#{edit}" id="#{field}" disabled="#{disabled}"
					value="#{entity[field]}" required="${required}" size="5">
					<f:validateDoubleRange minimum="0" rendered="#{negative}" />
				</h:inputText>
				<h:outputText rendered="#{!edit}" value="#{entity[field]}" style="font-weight:bold;"/>
				<ui:insert />
			</s:decorate>
		</mnt:isShort>
	
		<!--  If the value binding is a boolean, display a selectBooleanCheckbox field. -->
		<mnt:isBoolean id="vb">
			<s:decorate template="/layout/edit.xhtml">
				<ui:define name="label">
					<h:outputText value="#{label}" />
				</ui:define>
				
				<h:selectBooleanCheckbox rendered="#{edit}" id="#{field}" disabled="#{disabled}"
					value="#{entity[field]}" required="${required}">
					<c:if test="${!empty event}">
						<a:support event="onclick" reRender="#{reRender}" ajaxSingle="true" limitToList="true" />
					</c:if>
				</h:selectBooleanCheckbox>
				
				<c:if test="${!edit and isMessage}">
	        		<c:set var="fieldValue" value="#{entity[field]}" />
	        		<h:outputText rendered="#{fieldValue != null and fieldValue.toString() == 'true' and !edit}" value="#{messages['commons.yes']}" style="font-weight:bold;"/>
	        		<h:outputText rendered="#{fieldValue != null and fieldValue.toString() == 'false' and !edit}" value="#{messages['commons.no']}" style="font-weight:bold;"/>
	        		<h:outputText rendered="#{fieldValue != null and fieldValue.toString() != 'true' and fieldValue.toString() != 'false' and !edit}" value="#{messages[entity[field]]}" style="font-weight:bold;"/>
			    </c:if>
				    
			    <c:if test="${!edit and !isMessage}">
					<h:outputText rendered="#{!edit}" value="#{entity[field]}" style="font-weight:bold;"/>
			    </c:if>
			    
				<ui:insert />
			</s:decorate>
		</mnt:isBoolean>
	
		<!--  If the value binding is a date, display a rich:calendar field. -->
		<mnt:isDate id="vb">
			<s:decorate template="/layout/edit.xhtml">
				<ui:define name="label">
					<h:outputText value="#{label}" />
				</ui:define>
				<rich:calendar rendered="#{edit}" value="#{entity[field]}" disabled="#{disabled}"
					popup="true" showApplyButton="false" cellWidth="24px"
					datePattern="#{datePattern}" cellHeight="22px" style="width:200px"
					required="${required}" resetTimeOnDateSelect="#{resetTimeOnDateSelect}"/>
				<h:outputText rendered="#{!edit}" value="#{entity[field]}" style="font-weight:bold;">
					<s:convertDateTime type="date" pattern="#{datePattern}"/>
				</h:outputText>
				<ui:insert />
			</s:decorate>
		</mnt:isDate>
	
		<!--  If the value binding is an enum, display a drop down. -->
		<mnt:isEnum id="vb">
			<s:decorate template="/layout/edit.xhtml">
				<ui:define name="label">
					<h:outputText value="#{label}" />
				</ui:define>
				<h:selectOneMenu rendered="#{edit}" id="level" disabled="#{disabled}"
					value="#{entity[field]}" required="${required}">
					<c:if test="#{noSelectionLabel}">
						<s:selectItems value="#{vbType.getEnumConstants()}" var="enum"
							label="#{messages[enum.label]}" noSelectionLabel="#{messages['commons.select']}" />
						<s:convertEnum />
					</c:if>
					<c:if test="#{!noSelectionLabel}">
						<s:selectItems value="#{vbType.getEnumConstants()}" var="enum"
							label="#{messages[enum.label]}" />
						<s:convertEnum />
					</c:if>
					<c:if test="${!empty event}">
						<a:support event="onchange" reRender="#{reRender}" ajaxSingle="true" limitToList="true"  />
					</c:if>
				</h:selectOneMenu>
				<c:if test="${!edit}">
					<c:set var="enum" value="#{entity[field]}" />
				</c:if>
				<h:outputText rendered="#{!edit}" value="#{messages[enum.label]}" style="font-weight:bold;" />
				<ui:insert />
			</s:decorate>
		</mnt:isEnum>
	
		<!--  If the value binding is a List, display a panel with list of entities. -->
		<mnt:isList id="vb">
		
			<c:if test="#{listType == 'simpleList'}">
				<s:decorate template="/layout/edit.xhtml">
					<ui:define name="label">
						<h:outputText value="#{label}" /> 
					</ui:define>
					<rich:dataTable id="datatable" value="#{entity[field]}"
						var="listElement"
						onRowMouseOver="this.style.backgroundColor='#F1F1F1'"
						onRowMouseOut="this.style.backgroundColor='#{a4jSkin.tableBackgroundColor}'"
						reRender="scroller" rows="10">
						<c:forEach items="#{showFields.split(';')}" var="fieldToShow">
						<c:set var="headerAndValue" value="#{fieldToShow.split(',')}" />
						<c:set var="style" value="text-align:left;"  />
						<c:if test="${'right'.equals(headerAndValue[2])}">							
							<c:set var="style" value="text-align:right;"  />
						</c:if>							
							<rich:column width="100"  style="${style}">														
								<f:facet name="header">
									<h:outputText value="#{messages[headerAndValue[0]]}" />
								</f:facet>
								<c:set var="value" value="#{listElement[headerAndValue[1]]}"></c:set>
									<c:if test="${'msg'.equals(headerAndValue[2])}">
										<c:set var="value" value="#{messages[listElement[headerAndValue[1]].label]}" />
									</c:if>
								<h:outputText style="text-align:right;" value="#{value}"  converter="#{getConverter.forType(listElement[headerAndValue[1]])}"/>
							</rich:column>
						</c:forEach>
						
						<c:if test="#{deleteButton}">
							 <rich:column rendered="#{edit}">
								<h:commandLink id="deletelink" action="#{backingBean.delete(listElement.id)}"  onclick="if(confirm('#{messages['commons.confirmDelete']}')){return true;}else{return false;}" >
									<h:graphicImage value="/img/delete.gif" style="border:0" />
								</h:commandLink>
							</rich:column>
						</c:if>
						<rich:toolTip for="deletelink" value="#{messages['commons.delete']}" />
					</rich:dataTable>
					<c:if test="#{showButtonAddNew}">
						<h:commandButton rendered="#{edit and entity.getId() != null}" value="#{messages['commons.addNew']}" action="addNew" />
					</c:if>
					<ui:insert />
				</s:decorate>
			</c:if>
		
			<c:if test="#{listType=='pickUpList'}">
				<s:decorate template="/layout/edit.xhtml">
					<ui:define name="label">
						<h:outputText value="#{label}" />
					</ui:define>
					<c:set var="entityField" value="#{entity[field]}" />
					<rich:pickList id="aPickList" value="#{entityField}" rendered="#{edit}" copyAllControlLabel="#{messages['pickList.copyAll']}" 
					copyControlLabel="#{messages['pickList.copy']}" removeAllControlLabel="#{messages['pickList.removeAll']}" 
					removeControlLabel="#{messages['pickList.remove']}">
						<!-- List method that is used in when selecting list from listService -->
					      <c:if test="${empty listMethod}">
						      <c:if test="${empty childField2}">
				        		<s:selectItems value="#{listService.list()}" var="childEntity" label="#{childEntity[childField]}" />
				        	  </c:if>
				        	  <c:if test="${not empty childField2}">
				        		<s:selectItems value="#{listService.list()}" var="childEntity" label="#{childEntity[childField]} #{childEntity[childField2]}" />
				        	  </c:if>
					     </c:if>
					     <c:if test="${not empty listMethod}">
					     	<c:if test="${empty childField2}">
				        		<s:selectItems value="#{listService[listMethod]}" var="childEntity" label="#{childEntity[childField]}" />
			        	    </c:if>
			        	    <c:if test="${not empty childField2}">
				        		<s:selectItems value="#{listService[listMethod]}" var="childEntity" label="#{childEntity[childField]} #{childEntity[childField2]}" />
		        	  		</c:if>
					     </c:if>
		        		<s:convertEntity/>
					</rich:pickList>
				<c:set var="child" value="#{entity[field]}" />
				  <c:if test="${empty childField2}">
				    <ui:repeat value="#{child}" var="c" rendered="#{!edit}" >
						<c:set var="fieldValue" value="#{c[childField]}" />						
						<h:outputText value="#{fieldValue}" /> <br />
				    </ui:repeat>				  
				  </c:if>
				  <c:if test="${not empty childField2}">
				  	<ui:repeat value="#{child}" var="c" rendered="#{!edit}" >
						<c:set var="fieldValue" value="#{c[childField]}" />
						<c:set var="fieldValue2" value="#{c[childField2]}" />
					    <h:outputText value="#{fieldValue}-#{fieldValue2}" /> <br />
				    </ui:repeat>
				  </c:if>
				</s:decorate>
			</c:if>	
		</mnt:isList>
		
	</c:if>
	</c:if>
</ui:composition>

</html>
